#pragma once
#include <ISceneModel.hpp>

class SCENE_NAMEController;

class SCENE_NAMEModel : public ISceneModel
{
    friend class SCENE_NAMEController;
public:
    enum class SceneStates
    {
        //...
    };

//    struct CachedAppState
//    {
//        bool operator==(const CachedAppState& rhs) const
//        {
//            auto trick = [](const CachedAppState& state) {
//                return std::make_tuple(/*...*/);
//            };
//
//            return trick(*this) == trick(rhs);
//        }
//
//        bool operator!=(const CachedAppState& rhs) const { return !(*this == rhs); }
//    };

private:
    void pullAppInfo(UIAdapter& adapter) override 
    {
        //...
    }

    //bool wasModelUpdated() override
    //{
    //    return m_PreUpdateAppState != m_CachedAppState;
    //}

    //SceneStates m_CurrentSceneState{/*...*/};

    //CachedAppState m_CachedAppState{};
    //CachedAppState m_PreUpdateAppState{};
};
